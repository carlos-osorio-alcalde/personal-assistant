name: Deploy workflow

on:
  push:
    branches:
      - Develop
  workflow_dispatch: 

env:
  CONTAINER_REGISTRY: assistantbotcontainer
  IMAGE_NAME: assistantbot
  
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Azure
        run: |
          az login

      - name: Build Docker image
        run: |
          docker build --platform linux/amd64 -t ${{ env.IMAGE_NAME }} .

      - name: Log in to Container Registry
        run: |
          az acr login --name ${{ env.CONTAINER_REGISTRY }}

      - name: Tag Docker image
        run: |
          docker tag ${{ env.IMAGE_NAME }} ${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker image to Container Registry
        run: |
          docker push ${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

      - name: Deploy to VM
        uses: appleboy/ssh-action@master
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          CONTAINER_REGISTRY: ${{ env.CONTAINER_REGISTRY }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
                # Get the IDs of all running containers
                container_ids=$(docker ps -q)
                
                # Check if there are any running containers
                if [[ -n "$container_ids" ]]; then
                  # Kill the running containers
                  docker kill $container_ids
                fi
                
                az acr login --name $CONTAINER_REGISTRY; \
                docker pull $CONTAINER_REGISTRY.azurecr.io/$IMAGE_NAME:latest; \
                docker run -d --restart unless-stopped --env-file personal-assitant/.env $CONTAINER_REGISTRY.azurecr.io/$IMAGE_NAME:latest;